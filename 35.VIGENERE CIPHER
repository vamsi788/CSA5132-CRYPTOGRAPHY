#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

#define ALPHABET_SIZE 26

// Function to encrypt plaintext using one-time pad Vigenère cipher
void encrypt(const char *plaintext, const int *key, char *ciphertext) {
    int key_index = 0;
    int plaintext_len = strlen(plaintext);
    for (int i = 0; i < plaintext_len; i++) {
        if (isalpha(plaintext[i])) {
            char shift = key[key_index % plaintext_len];
            char base = islower(plaintext[i]) ? 'a' : 'A';
            ciphertext[i] = base + (plaintext[i] - base + shift) % ALPHABET_SIZE;
            key_index++;
        } else {
            ciphertext[i] = plaintext[i]; // Non-alphabetic characters remain unchanged
        }
    }
    ciphertext[plaintext_len] = '\0'; // Null-terminate the string
}

// Function to decrypt ciphertext using one-time pad Vigenère cipher
void decrypt(const char *ciphertext, const int *key, char *plaintext) {
    int key_index = 0;
    int ciphertext_len = strlen(ciphertext);
    for (int i = 0; i < ciphertext_len; i++) {
        if (isalpha(ciphertext[i])) {
            char shift = key[key_index % ciphertext_len];
            char base = islower(ciphertext[i]) ? 'a' : 'A';
            plaintext[i] = base + (ciphertext[i] - base - shift + ALPHABET_SIZE) % ALPHABET_SIZE;
            key_index++;
        } else {
            plaintext[i] = ciphertext[i]; // Non-alphabetic characters remain unchanged
        }
    }
    plaintext[ciphertext_len] = '\0'; // Null-terminate the string
}

int main() {
    const char *plaintext = "Hello, World!";
    int key[] = {3, 19, 5}; // Example key
    char ciphertext[strlen(plaintext) + 1];
    char decryptedtext[strlen(plaintext) + 1];

    // Encrypt the plaintext
    encrypt(plaintext, key, ciphertext);
    printf("Ciphertext: %s\n", ciphertext);

    // Decrypt the ciphertext
    decrypt(ciphertext, key, decryptedtext);
    printf("Decrypted text: %s\n", decryptedtext);

    return 0;
}
